aspect MinValue {
	// Exercise 1
	syn int Node.localMin() = 0;
	eq Leaf.localMin() = getNumber();
	eq Pair.localMin() {
		return getLeft().localMin() < getRight().localMin() ? getLeft().localMin() : getRight().localMin();
	}
	
	// Exercise 2
	inh int Node.globalMin();
	eq Program.getNode().globalMin() {
		return getNode().localMin();	
	}
		

	// Exercise 3
	syn boolean Leaf.isMinValue() = getNumber() == globalMin();
	
	// Exercise 4
	syn int Program.nbrOfMinValues();
	syn int Node.nbrOfMinValues();
	
	eq Program.nbrOfMinValues() = getNode().nbrOfMinValues(); 
	eq Leaf.nbrOfMinValues() = isMinValue() ? 1:0;
	eq Pair.nbrOfMinValues() = getLeft().nbrOfMinValues() + getRight().nbrOfMinValues();
}
