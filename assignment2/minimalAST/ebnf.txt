Program -> ProgramComponent*

ProgramComponent -> FunctionDec | Comment
FunctionDec -> IdDecl "(" [IdDecl ("," IdDecl)*] ")" CompoundStmt
Comment -> COMMENT 

Expr -> BinExpr | IdUse | IntUse |Â FunctionFactor 
IdUse -> ID
IntUse -> INT
FunctionFactor -> IdUse "(" [AddSubList] ")" 
AddSubList -> AddSub | AddSubList "," AddSub 
BinExpr -> AddSub | Term | Factor | CompExpr 

AddSub -> Add | Sub | Term 
Term -> Mul | Div | Mod | Factor
Factor -> IdUse | IntUse | "(" AddSub ")" | FunctionFactor
CompExpr -> Equal | Nequal | Greater | Less | GreaterEqual | LessEqual
Add -> AddSub "+" Term
Sub -> AddSub "-" Term
Mul -> Term "*" Factor
Div -> Term "/" Factor
Mod -> Term "%" Factor

Equal -> AddSub "==" AddSub
NEqual -> AddSub "!=" AddSub
Greater -> AddSub ">" AddSub
Less -> AddSub "<" AddSub
GreaterEqual -> AddSub ">=" AddSub
LessEqual -> AddSub "<=" AddSub

Stmt -> FunctionStmt | ReturnStmt | AssignStmt | WhileStmt | IfStmt | DeclStmt
FunctionStmt -> FunctionFactor ";" 
ReturnStmt -> "return" AddSub ";"
AssignStmt -> IdUse "=" AddSub ";"
IfStmt -> "if" "(" CompExpr ")" CompoundStmt ["else" CompoundStmt]
WhileStmt -> "while" "(" CompExpr ")" CompoundStmt
DeclStmt -> IdDecl ["=" AddSub] ";" 

IdDecl -> "int" ID ";"
CompundStmt -> "{" Stmt* "}"		

Int -> [0-9]+
ID -> [A-Za-z]+ [A-Za-z0-9]*
