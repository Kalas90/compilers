import java.io.PrintStream;

aspect PrettyPrint {
	public void ASTNode.prettyPrint(PrintStream out) {
		prettyPrint(out, "");
		out.println();
	}

	public void ASTNode.prettyPrint(PrintStream out, String ind) {
		for (int i = 0; i < getNumChild(); ++i) {
			getChild(i).prettyPrint(out, ind);
		}
	}

	public void Mul.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" * ");
		getRight().prettyPrint(out, ind);
	}

	public void Div.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" / ");
		getRight().prettyPrint(out, ind);
	}

	public void Mod.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" % ");
		getRight().prettyPrint(out, ind);
	}
	
	public void Add.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" + ");
		getRight().prettyPrint(out, ind);
	}
	
	public void Sub.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" - ");
		getRight().prettyPrint(out, ind);
	}
		
	public void Equal.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" == ");
		getRight().prettyPrint(out, ind);
	}
		
	public void NEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" != ");
		getRight().prettyPrint(out, ind);
	}
	
	public void Greater.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" > ");
		getRight().prettyPrint(out, ind);
	}
		
	public void Less.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" < ");
		getRight().prettyPrint(out, ind);
	}
		
	public void GreaterEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" >= ");
		getRight().prettyPrint(out, ind);
	}
		
	public void LessEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" <= ");
		getRight().prettyPrint(out, ind);
	}
		
	public void IntUse.prettyPrint(PrintStream out, String ind) {
		out.print(getINT());
	}

	public void IdUse.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
	}

	public void IdDecl.prettyPrint(PrintStream out, String ind) {
		out.print("int " + getID());
	}

	public void FunctionDec.prettyPrint(PrintStream out, String ind) {
		getIdDecl().prettyPrint(out, ind);
		out.print("(");
		if(hasParam()) {
			getParam(0).prettyPrint(out, ind);
			for (int i = 1; i < getNumParam(); ++i) {
				out.print(", ");
				getParam(i).prettyPrint(out, ind);
			}
		}
		out.print(") ");
		getCompoundStmt().prettyPrint(out, ind);	
	}

	public void CompoundStmt.prettyPrint(PrintStream out, String ind) {
		out.print("{");
		for (int i = 0; i < getNumStmt(); ++i) {
			getStmt(i).prettyPrint(out, ind + "	");
		}
		out.print("\n" + ind + "}");
	}

	public void AssignStmt.prettyPrint(PrintStream out, String ind) {
		out.print("\n" + ind);
		getIdUse().prettyPrint(out, ind);
		out.print(" = ");
		getExpr().prettyPrint(out, ind);
		out.print(";");
	}
	public void DeclStmt.prettyPrint(PrintStream out, String ind) {
		out.print("\n" + ind);
		getIdDecl().prettyPrint(out, ind);
		if(hasExpr()) {
			out.print(" = ");
			getExpr().prettyPrint(out, ind);
		}
		out.print(";");
	}

	public void FunctionStmt.prettyPrint(PrintStream out, String ind) {
		out.print("\n" + ind);
		getFunctionCall().prettyPrint(out, ind);
		out.print(";");
	}

	public void IfStmt.prettyPrint(PrintStream out, String ind) {
		out.print("\n" + ind + "if (");
		getIf().prettyPrint(out, ind);
		out.print(") ");
		getThen().prettyPrint(out, ind);
		if(hasElse()) {
			out.print(" else ");
			getElse().prettyPrint(out, ind);
		}
	}

	public void ReturnStmt.prettyPrint(PrintStream out, String ind) {
		out.print("\n" + ind + "return ");
		getExpr().prettyPrint(out, ind);
		out.print(";");
	}

	public void WhileStmt.prettyPrint(PrintStream out, String ind) {
		out.print("\n" + ind + "while (");
		getExpr().prettyPrint(out, ind);
		out.print(") ");
		getCompoundStmt().prettyPrint(out, ind);
	}

	public void FunctionCall.prettyPrint(PrintStream out, String ind) {
		getIdUse().prettyPrint(out, ind);
		out.print("(");
		if(hasExpr()) {
			getExpr(0).prettyPrint(out, ind);
			for (int i = 1; i < getNumExpr(); ++i) {
				out.print(", ");
				getExpr(i).prettyPrint(out, ind);
			}
		}
		out.print(")");
	}

	public void ParExpr.prettyPrint(PrintStream out, String ind) {
		out.print("(");
		getExpr().prettyPrint(out, ind);
		out.print(")");
	}

	public void Program.prettyPrint(PrintStream out, String ind) {
		if(hasFunctionDec()) {
			getFunctionDec(0).prettyPrint(out, ind);
			for (int i = 1; i < getNumFunctionDec(); ++i) {
				out.println();
				getFunctionDec(i).prettyPrint(out, ind);
			}
		}
	}
	
	
}
